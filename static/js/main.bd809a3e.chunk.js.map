{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleInputChange","e","currentTarget","value","resetForm","form","preventDefault","id","label","htmlFor","type","onChange","pattern","title","input","required","btnSubmit","Filter","span","ContactList","contacts","onDeleteContact","list","map","item","button","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","console","log","find","elem","toLowerCase","alert","contact","prevState","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd809a3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__272Jp\",\"label\":\"ContactForm_label__2Crum\",\"input\":\"ContactForm_input__NozXH\",\"btnSubmit\":\"ContactForm_btnSubmit__y4zNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2scac\",\"item\":\"ContactList_item__1KI3X\",\"name\":\"ContactList_name__2ySJg\",\"number\":\"ContactList_number__U1rKZ\",\"button\":\"ContactList_button__39b8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__26cwX\",\"input\":\"Filter_input__3r2mA\",\"span\":\"Filter_span__362hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3I0k6\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({\n      name: name,\n      id: uuidv4(),\n      number: number,\n    });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          className={s.input}\n          required\n        />\n\n        <label className={s.label} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          className={s.input}\n          required\n        />\n\n        <button type=\"submit\" className={s.btnSubmit}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      <span className={s.span}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <p className={s.name}>{name}</p>\n        <p className={s.number}>{number}</p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const formSubmitHandler = newContact => {\n    console.log(newContact);\n\n    const contactExist = contacts.find(\n      elem => newContact.name.toLowerCase() === elem.name.toLowerCase(),\n    );\n\n    if (contactExist) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: newContact.name,\n        number: newContact.number,\n      };\n\n      setContacts(prevState => [contact, ...prevState]);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <Container>\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm onSubmit={formSubmitHandler} />\n\n          <h2 className=\"title\">Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={getVisibleContacts()}\n            onDeleteContact={deleteContact}\n          />\n        </Container>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}